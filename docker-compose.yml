version: '3.7'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile
    image: digitalocean.com/php
    container_name: ${APP_NAME}_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./src:/var/www
      - ./Docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: ${APP_NAME}_webserver
    restart: unless-stopped
    tty: true
    ports:
      - "${DOCKER_NGINX_PORT}:80"
      - "${DOCKER_NGINX_PORT_SECURE}:443"
    volumes:
      - ./src:/var/www
      - ./Docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network


  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: ${APP_NAME}_db
    restart: unless-stopped
    tty: true
    ports:
      - "${DOCKER_MYSQL_PORT}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./Docker/mysql/dbdata:/var/lib/mysql/
      - ./Docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  # PHP my Admin service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_NAME}_phpmyadmin
    ports:
      - "${DOCKER_PHPMYADMIN_PORT}:80"
    links:
      - db:db
    environment:
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
    name: ${APP_NAME}_network
#Volumes
volumes:
  dbdata:
    driver: local